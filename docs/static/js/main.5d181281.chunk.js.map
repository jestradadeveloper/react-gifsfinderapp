{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA6BeA,EA1BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAIlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAfkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KACd,SAAAC,GACC,IAAD,EACC,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QC8BjBO,EA/BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAa,IAAD,EAEXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAsBrC,OAfAC,qBAAU,WACNxB,EAAQC,GACPwB,MACG,SAAAC,GACIC,YAAW,WACRJ,EAAS,CACJf,KAAMkB,EACNL,SAAS,MAEd,UAIb,CAACpB,IAEIqB,EDd0BM,CAAa3B,GAAjCa,EANe,EAMpBN,KAAaa,EANO,EAMPA,QAGrB,OACI,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KACH,SAAAC,GAAG,OACD,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEMlBiB,MA1Bf,WAAwB,MAEgB1C,mBAAS,CAAC,cAF1B,mBAEb2C,EAFa,KAED5C,EAFC,KAMpB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCfjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d181281.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length>2) {\n            setCategories(cats => [inputValue,...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n          />  \n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=KvwnFCr3Z981Ukb4Zu8MgW3hCnW1q6Wo`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(\n        img =>\n        {\n         return{\n             id: img.id,\n             title: img.title,\n             url: img.images?.downsized_medium.url\n         }       \n        }\n    )\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p>{title}</p>\n            <img src={url} alt={title}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n//import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n    // const [images, setImages ] = useState([]);\n    // useEffect(()=>{\n    //     getGifs(category)\n    //     .then(setImages);\n    // },[category])\n    const { data:images ,loading } = useFetchGifs(category);\n    \n    \n    return (\n        <>\n          <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \n          { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n          <div className=\"card-grid\"> \n          \n            { \n              images.map(\n                  img=>(\n                    <GifGridItem \n                        key={img.id} \n                        {...img} \n                    />\n\n                  )\n              )\n            }\n          </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then(\n            imgs => {\n                setTimeout(() => {\n                   setState({\n                        data: imgs,\n                        loading: false \n                     })\n                }, 3000);\n                \n            }\n        )\n    },[category])\n\n    return state;\n}","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GifExpertApp() {\n    //const categories = ['One Punch', 'Pokemon', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n    //const handleAdd = () => {\n      //  setCategories([...categories, 'Hunter']);\n    //}\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n            <AddCategory setCategories={ setCategories }/>\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n           \n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}